build-and-push:
    needs: test
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    permissions:
        id-token: write
        contents: read

    steps:
        - name: Checkout
          uses: actions/checkout@v4

        # --- Autenticación para AWS ECR ---
        - name: Configure AWS credentials (OIDC)
          uses: aws-actions/configure-aws-credentials@v4
          with:
              role-to-assume: ${{ secrets.AWS_ROLE_ARN }}
              role-session-name: gha-${{ github.run_id }}
              aws-region: ${{ env.AWS_REGION }}

        - name: Login to Amazon ECR
          id: login-ecr
          uses: aws-actions/amazon-ecr-login@v2

        # --- Autenticación para Docker Hub ---
        - name: Login to Docker Hub
          uses: docker/login-action@v3
          with:
              username: ${{ secrets.DOCKERHUB_USERNAME }}
              password: ${{ secrets.DOCKERHUB_TOKEN }}

        # --- Lógica para asegurar que el repo ECR existe (opcional pero recomendado) ---
        - name: Ensure ECR repository exists
          run: |
              aws ecr describe-repositories --repository-names "$ECR_REPO_NAME" >/dev/null 2>&1 || \
              aws ecr create-repository --repository-name "$ECR_REPO_NAME" \
                --image-scanning-configuration scanOnPush=true \
                --encryption-configuration encryptionType=AES256

        # --- Metadatos para AMBOS registros ---
        - name: Extract Docker metadata (tags/labels)
          id: meta
          uses: docker/metadata-action@v5
          with:
              images: |
                  ${{ steps.login-ecr.outputs.registry }}/${{ env.ECR_REPO_NAME }}
                  ${{ secrets.DOCKERHUB_USERNAME }}/${{ vars.DOCKERHUB_REPO_NAME }}
              tags: |
                  type=ref,event=branch
                  type=sha,prefix={{branch}}-
                  type=raw,value=latest,enable={{is_default_branch}}
                  type=raw,value=${{ needs.test.outputs.build_tag }}

        - name: Set up Docker Buildx
          uses: docker/setup-buildx-action@v3

        # --- Construir y publicar en AMBOS registros a la vez ---
        - name: Build & Push image to ECR and Docker Hub
          uses: docker/build-push-action@v5
          with:
              context: .
              file: ./Dockerfile
              push: true
              tags: ${{ steps.meta.outputs.tags }}
              labels: ${{ steps.meta.outputs.labels }}
              cache-from: type=registry,ref=${{ steps.login-ecr.outputs.registry }}/${{ env.ECR_REPO_NAME }}:buildcache
              cache-to: type=registry,ref=${{ steps.login-ecr.outputs.registry }}/${{ env.ECR_REPO_NAME }}:buildcache,mode=max

        # --- Resumen actualizado ---
        - name: Summary
          run: |
              echo "## 🐳 Publicación exitosa en los registros" >> $GITHUB_STEP_SUMMARY
              echo "### ✅ AWS ECR" >> $GITHUB_STEP_SUMMARY
              echo "- **Repositorio:** ${{ steps.login-ecr.outputs.registry }}/$ECR_REPO_NAME" >> $GITHUB_STEP_SUMMARY
              echo "### ✅ Docker Hub" >> $GITHUB_STEP_SUMMARY
              echo "- **Repositorio:** ${{ secrets.DOCKERHUB_USERNAME }}/${{ vars.DOCKERHUB_REPO_NAME }}" >> $GITHUB_STEP_SUMMARY
              echo "---" >> $GITHUB_STEP_SUMMARY
              echo "#### Tags generados:" >> $GITHUB_STEP_SUMMARY
              echo '```' >> $GITHUB_STEP_SUMMARY
              echo "${{ steps.meta.outputs.tags }}" >> $GITHUB_STEP_SUMMARY
              echo '```' >> $GITHUB_STEP_SUMMARY
